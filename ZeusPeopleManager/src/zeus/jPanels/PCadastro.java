/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package zeus.jPanels;

import java.awt.Color;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.Calendar;
import java.util.Date;
import java.util.logging.Level;
import java.util.logging.Logger;
import zeus.conexaoDB.ConexaoDB;
import javax.swing.JOptionPane;
import javax.swing.JTextField;
import zeus.classes.Admin;
import zeus.classes.Aluno;
import zeus.classes.Controler;
import zeus.classes.Professor;

/**
 *
 * @author Adriel Rosa
 */
public class PCadastro extends javax.swing.JFrame {

    /**
     * Creates new form PCadastro
     */
    private ConexaoDB conexao = new ConexaoDB();
    private Controler controler = new Controler();
    private String vem_de = null;
    private boolean confirm_user = false;
    private boolean confirm_cpf = false;
    private boolean confirm_email = false;
    private boolean confirm_telefone = false;
    private boolean confirm_idade = false;
    
    public PCadastro() {
        initComponents();
        
    }
    public PCadastro(String vindo) {
        initComponents();
        vem_de = vindo;
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        btnVoltar = new javax.swing.JButton();
        jPanel3 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        inputUser = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        inputEmail = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        inputEnd = new javax.swing.JTextField();
        jLabel10 = new javax.swing.JLabel();
        comboboxTipoConta = new javax.swing.JComboBox<>();
        inputPass = new javax.swing.JPasswordField();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        inputNomeCompleto = new javax.swing.JTextField();
        jLabel11 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        jLabel13 = new javax.swing.JLabel();
        jLabel14 = new javax.swing.JLabel();
        jLabel15 = new javax.swing.JLabel();
        jLabel16 = new javax.swing.JLabel();
        jLabel18 = new javax.swing.JLabel();
        jLabel19 = new javax.swing.JLabel();
        jLabel20 = new javax.swing.JLabel();
        jLabel21 = new javax.swing.JLabel();
        inputTel = new javax.swing.JFormattedTextField();
        dataDeNascimento = new javax.swing.JFormattedTextField();
        inputCPF = new javax.swing.JFormattedTextField();
        btnPhoto = new javax.swing.JButton();
        jPanel4 = new javax.swing.JPanel();
        jLabel9 = new javax.swing.JLabel();
        comboboxRecSenha = new javax.swing.JComboBox<>();
        inputRecSenha = new javax.swing.JTextField();
        jLabel17 = new javax.swing.JLabel();
        jPanel5 = new javax.swing.JPanel();
        btnCadastrar = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("ZEUS - Cadastro de usuários");
        setIconImage(new javax.swing.ImageIcon(getClass().getResource("imagens/iconzeus.png")).getImage());
        setMinimumSize(new java.awt.Dimension(495, 620));

        jPanel1.setBackground(new java.awt.Color(0, 51, 204));
        jPanel1.setPreferredSize(new java.awt.Dimension(850, 620));

        jPanel2.setBackground(new java.awt.Color(135, 159, 255));

        jLabel1.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jLabel1.setText("Cadastro de Usuario");

        btnVoltar.setBackground(new java.awt.Color(135, 159, 255));
        btnVoltar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/zeus/images/btn-voltar.png"))); // NOI18N
        btnVoltar.setBorder(null);
        btnVoltar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnVoltarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(btnVoltar)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel1)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btnVoltar)
                    .addComponent(jLabel1))
                .addContainerGap())
        );

        jPanel3.setBackground(new java.awt.Color(135, 159, 255));

        jLabel2.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel2.setText("Usuario:");

        jLabel3.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel3.setText("Senha:");

        inputUser.setBackground(new java.awt.Color(188, 201, 255));
        inputUser.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        inputUser.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                inputUserFocusLost(evt);
            }
        });

        jLabel4.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel4.setText("E-mail:");

        inputEmail.setBackground(new java.awt.Color(188, 201, 255));
        inputEmail.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        inputEmail.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                inputEmailFocusLost(evt);
            }
        });

        jLabel7.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel7.setText("Telefone:");

        jLabel8.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel8.setText("Data de nascimento:");

        inputEnd.setBackground(new java.awt.Color(188, 201, 255));
        inputEnd.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N

        jLabel10.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel10.setText("Tipo de conta:");

        comboboxTipoConta.setBackground(new java.awt.Color(188, 201, 255));
        comboboxTipoConta.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        comboboxTipoConta.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Aluno", "Professor" }));
        comboboxTipoConta.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                comboboxTipoContaActionPerformed(evt);
            }
        });

        inputPass.setBackground(new java.awt.Color(188, 201, 255));
        inputPass.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N

        jLabel5.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel5.setText("CPF:");

        jLabel6.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel6.setText("Nome Completo:");

        inputNomeCompleto.setBackground(new java.awt.Color(188, 201, 255));
        inputNomeCompleto.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N

        jLabel11.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel11.setForeground(new java.awt.Color(255, 0, 0));
        jLabel11.setText("*");

        jLabel12.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel12.setForeground(new java.awt.Color(255, 0, 0));
        jLabel12.setText("*");

        jLabel13.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel13.setForeground(new java.awt.Color(255, 0, 0));
        jLabel13.setText("*");

        jLabel14.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel14.setForeground(new java.awt.Color(255, 0, 0));
        jLabel14.setText("*");

        jLabel15.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel15.setForeground(new java.awt.Color(255, 0, 0));
        jLabel15.setText("*");

        jLabel16.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel16.setForeground(new java.awt.Color(255, 0, 0));
        jLabel16.setText("*");

        jLabel18.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel18.setForeground(new java.awt.Color(255, 0, 0));
        jLabel18.setText("*");

        jLabel19.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel19.setText("Endereço:");

        jLabel20.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel20.setForeground(new java.awt.Color(255, 0, 0));
        jLabel20.setText("*");

        jLabel21.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel21.setForeground(new java.awt.Color(255, 0, 0));
        jLabel21.setText("*");

        inputTel.setBackground(new java.awt.Color(188, 201, 255));
        try {
            inputTel.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.MaskFormatter("(##) # ####-####")));
        } catch (java.text.ParseException ex) {
            ex.printStackTrace();
        }
        inputTel.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        inputTel.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                inputTelFocusLost(evt);
            }
        });

        dataDeNascimento.setBackground(new java.awt.Color(188, 201, 255));
        try {
            dataDeNascimento.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.MaskFormatter("##/##/####")));
        } catch (java.text.ParseException ex) {
            ex.printStackTrace();
        }
        dataDeNascimento.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        dataDeNascimento.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                dataDeNascimentoFocusLost(evt);
            }
        });

        inputCPF.setBackground(new java.awt.Color(188, 201, 255));
        try {
            inputCPF.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.MaskFormatter("###.###.###-##")));
        } catch (java.text.ParseException ex) {
            ex.printStackTrace();
        }
        inputCPF.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        inputCPF.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                inputCPFFocusLost(evt);
            }
        });

        btnPhoto.setBackground(new java.awt.Color(23, 23, 255));
        btnPhoto.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        btnPhoto.setForeground(new java.awt.Color(255, 255, 255));
        btnPhoto.setText("Foto");
        btnPhoto.setEnabled(false);
        btnPhoto.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnPhotoActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(jPanel3Layout.createSequentialGroup()
                                .addComponent(jLabel2)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jLabel11, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(inputUser, javax.swing.GroupLayout.DEFAULT_SIZE, 199, Short.MAX_VALUE)
                            .addGroup(jPanel3Layout.createSequentialGroup()
                                .addComponent(jLabel3)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jLabel12, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(inputPass))
                        .addGap(30, 30, 30))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel3Layout.createSequentialGroup()
                                .addComponent(inputCPF)
                                .addGap(30, 30, 30))
                            .addGroup(jPanel3Layout.createSequentialGroup()
                                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(jPanel3Layout.createSequentialGroup()
                                        .addComponent(jLabel6)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(jLabel21, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addComponent(inputNomeCompleto, javax.swing.GroupLayout.PREFERRED_SIZE, 199, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGroup(jPanel3Layout.createSequentialGroup()
                                        .addComponent(jLabel5)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(jLabel14, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(jPanel3Layout.createSequentialGroup()
                                        .addComponent(jLabel19)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(jLabel18, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addComponent(inputEnd, javax.swing.GroupLayout.PREFERRED_SIZE, 199, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))))
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addGroup(jPanel3Layout.createSequentialGroup()
                            .addComponent(jLabel7)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(jLabel13, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(jPanel3Layout.createSequentialGroup()
                            .addComponent(jLabel10)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(jLabel16, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addComponent(comboboxTipoConta, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(jPanel3Layout.createSequentialGroup()
                            .addComponent(jLabel4)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(jLabel15, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addComponent(inputTel)
                        .addGroup(jPanel3Layout.createSequentialGroup()
                            .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(jLabel8, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(dataDeNascimento))
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(jLabel20, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addComponent(inputEmail, javax.swing.GroupLayout.PREFERRED_SIZE, 199, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(btnPhoto, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(jPanel3Layout.createSequentialGroup()
                                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jLabel10)
                                    .addComponent(jLabel16))
                                .addGap(2, 2, 2)
                                .addComponent(comboboxTipoConta, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel3Layout.createSequentialGroup()
                                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jLabel2)
                                    .addComponent(jLabel11))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(inputUser, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel3)
                            .addComponent(jLabel7)
                            .addComponent(jLabel12)
                            .addComponent(jLabel13)))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGap(84, 84, 84)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(inputPass, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(inputTel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel6)
                            .addComponent(jLabel8)
                            .addComponent(jLabel20)
                            .addComponent(jLabel21))))
                .addGap(6, 6, 6)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(inputNomeCompleto, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(dataDeNascimento, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel4)
                    .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel15)
                        .addComponent(jLabel5)
                        .addComponent(jLabel14)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(inputEmail, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(inputCPF, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel18)
                            .addComponent(jLabel19))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(inputEnd, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(btnPhoto))
                .addContainerGap(9, Short.MAX_VALUE))
        );

        jPanel4.setBackground(new java.awt.Color(135, 159, 255));

        jLabel9.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel9.setText("Pergunta de recuperação de senha:");

        comboboxRecSenha.setBackground(new java.awt.Color(188, 201, 255));
        comboboxRecSenha.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        comboboxRecSenha.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Onde seus pais se conhecera?", "Qual é o nome do seu melhor amigo de infância?", "Em que cidade você nasceu?", "Qual é o nome do seu primeiro professor?", "Qual é o nome do seu primeiro amor?", "Em que ano você se formou no ensino médio?", "Qual é o nome da sua avó materna?", "Qual é a sua comida favorita?", "Qual é o nome do seu primeiro animal de estimação?" }));

        inputRecSenha.setBackground(new java.awt.Color(188, 201, 255));
        inputRecSenha.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N

        jLabel17.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel17.setForeground(new java.awt.Color(255, 0, 0));
        jLabel17.setText("*");

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel4Layout.createSequentialGroup()
                        .addComponent(jLabel9)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel17, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(comboboxRecSenha, javax.swing.GroupLayout.Alignment.LEADING, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(inputRecSenha, javax.swing.GroupLayout.Alignment.LEADING))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel9)
                    .addComponent(jLabel17))
                .addGap(11, 11, 11)
                .addComponent(comboboxRecSenha, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(inputRecSenha, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(15, Short.MAX_VALUE))
        );

        jPanel5.setBackground(new java.awt.Color(135, 159, 255));

        btnCadastrar.setBackground(new java.awt.Color(23, 23, 255));
        btnCadastrar.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        btnCadastrar.setForeground(new java.awt.Color(255, 255, 255));
        btnCadastrar.setText("Cadastrar-se");
        btnCadastrar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCadastrarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(btnCadastrar, javax.swing.GroupLayout.PREFERRED_SIZE, 175, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(259, Short.MAX_VALUE))
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(btnCadastrar, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(16, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(jPanel4, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jPanel3, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jPanel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(82, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, 452, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );

        setSize(new java.awt.Dimension(468, 552));
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void btnVoltarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnVoltarActionPerformed
        if ("login".equals(vem_de)){
            new PLogin().setVisible(true);
            this.dispose();
        } else {
            this.dispose();
        }
    }//GEN-LAST:event_btnVoltarActionPerformed

    private void btnCadastrarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCadastrarActionPerformed
        String usuario = inputUser.getText();
        String senha = String.valueOf(inputPass.getPassword());
        String cpf = inputCPF.getText();
        String email = inputEmail.getText();
        String telefone = inputTel.getText();
        String endereco = inputEnd.getText();
        String tipoDeConta = String.valueOf(comboboxTipoConta.getSelectedItem());
        String nome = inputNomeCompleto.getText();
        String data_nascimento = dataDeNascimento.getText();
        String pgt_rec_senha = String.valueOf(comboboxRecSenha.getSelectedItem());
        String resp_rec_senha = inputRecSenha.getText();
        
        int idade_int = 0;
        if (confirm_idade == true){
            idade_int = retornarIdadeInt(data_nascimento);
        }
        confirm_cpf = validarCampos(inputCPF, inputCPF.getText(), "cpf");
        confirm_cpf = controler.verificacaoCpf(inputCPF,(inputCPF.getText().replace(".", "")).replace("-", ""));
        
        if (!"".equals(usuario) && !"".equals(senha) && !"".equals(cpf) && !"".equals(email) && !"".equals(telefone) && !"".equals(endereco) && !"".equals(tipoDeConta) && !"".equals(nome) && !"".equals(data_nascimento)  && !"".equals(pgt_rec_senha) && !"".equals(resp_rec_senha)){
            if("Professor".equals(tipoDeConta)){
                if (confirm_user == true && confirm_cpf == true && confirm_email == true && confirm_telefone == true && confirm_idade == true){
                    Professor professor = new Professor();
                    professor.setUsuario(usuario);
                    professor.setSenha(senha);
                    professor.setNome(nome);
                    professor.setData_nascimento(data_nascimento);
                    professor.setIdade(idade_int);
                    professor.setCpf(cpf);
                    professor.setEmail(email);
                    professor.setEndereco(endereco);
                    professor.setTelefone(telefone);
                    professor.setNivel_de_acesso(2);
                    professor.setStatus_da_conta(1);
                    professor.setPgt_rec_senha(pgt_rec_senha);
                    professor.setResp_rec_senha(resp_rec_senha);
                    professor.setMateriaLecionada("Portugues");
                    professor.setSalario(5000.00);

                    cadastrarProfessorDB(professor);

                    if ("login".equals(vem_de)){
                        new PLogin().setVisible(true);
                        this.dispose();
                    } else {
                        this.dispose();
                    }
                } else {
                    JOptionPane.showMessageDialog(null, "Ops, Cadastro não realizado!\nVerifique as informações e tente novamente!", "ERRO", JOptionPane.ERROR_MESSAGE);
                }
                
            }else if ("Aluno".equals(tipoDeConta)){
                if (confirm_user == true && confirm_cpf == true && confirm_email == true && confirm_telefone == true ){
                    Aluno aluno = new Aluno();
                    aluno.setUsuario(usuario);
                    aluno.setSenha(senha);
                    aluno.setNome(nome);
                    aluno.setData_nascimento(data_nascimento);
                    aluno.setIdade(idade_int);
                    aluno.setCpf(cpf);
                    aluno.setEmail(email);
                    aluno.setEndereco(endereco);
                    aluno.setTelefone(telefone);
                    aluno.setNivel_de_acesso(1);
                    aluno.setStatus_da_conta(1);
                    aluno.setPgt_rec_senha(pgt_rec_senha);
                    aluno.setResp_rec_senha(resp_rec_senha);
                    aluno.setMatricula(gerarMatriculaAluno(cpf));
                    aluno.setMensalidade(200.00);

                    cadastrarAluno(aluno);

                    if ("login".equals(vem_de)){
                        new PLogin().setVisible(true);
                        this.dispose();
                    } else {
                        this.dispose();
                    }
                } else {
                    JOptionPane.showMessageDialog(null, "Ops, Cadastro não realizado!\nVerifique as informações e tente novamente!", "ERRO", JOptionPane.ERROR_MESSAGE);
                }
                
            } else if ("Admin".equals(tipoDeConta)){
                if (confirm_user == true && confirm_cpf == true && confirm_email == true && confirm_telefone == true ){
                    Admin admin = new Admin();
                    admin.setUsuario(usuario);
                    admin.setSenha(senha);
                    admin.setNome(nome);
                    admin.setData_nascimento(data_nascimento);
                    admin.setIdade(idade_int);
                    admin.setCpf(cpf);
                    admin.setEmail(email);
                    admin.setEndereco(endereco);
                    admin.setTelefone(telefone);
                    admin.setNivel_de_acesso(3);
                    admin.setStatus_da_conta(1);
                    admin.setPgt_rec_senha(pgt_rec_senha);
                    admin.setResp_rec_senha(resp_rec_senha);

                    cadastrarAdmin(admin);

                    if ("login".equals(vem_de)){
                        new PLogin().setVisible(true);
                        this.dispose();
                    } else {
                        this.dispose();
                    }
                } else {
                    JOptionPane.showMessageDialog(null, "Ops, Cadastro não realizado!\nVerifique as informações e tente novamente!", "ERRO", JOptionPane.ERROR_MESSAGE);
                }
                
            } 
            //JOptionPane.showMessageDialog(null, "Cadastro efetuado com sucesso!", "SUCESSO", JOptionPane.INFORMATION_MESSAGE);
        } else {
            JOptionPane.showMessageDialog(null, "Ops, Cadastro não realizado!\nVerifique as informações e tente novamente!", "ERRO", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_btnCadastrarActionPerformed

    private void inputUserFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_inputUserFocusLost
        confirm_user = validarCampos(inputUser, inputUser.getText(), "usuario");
        if (confirm_user == true){
            btnPhoto.setEnabled(true);
        }
    }//GEN-LAST:event_inputUserFocusLost

    private void inputCPFFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_inputCPFFocusLost
        confirm_cpf = validarCampos(inputCPF, inputCPF.getText(), "cpf");
        confirm_cpf = controler.verificacaoCpf(inputCPF,(inputCPF.getText().replace(".", "")).replace("-", ""));
    }//GEN-LAST:event_inputCPFFocusLost

    private void inputEmailFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_inputEmailFocusLost
        confirm_email = validarCampos(inputEmail, inputEmail.getText(), "email");
    }//GEN-LAST:event_inputEmailFocusLost

    private void inputTelFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_inputTelFocusLost
        confirm_telefone = validarCampos(inputTel, inputTel.getText(), "telefone");
    }//GEN-LAST:event_inputTelFocusLost

    private void dataDeNascimentoFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_dataDeNascimentoFocusLost
        validarIdade(String.format("%s", dataDeNascimento.getText()));
    }//GEN-LAST:event_dataDeNascimentoFocusLost

    private void comboboxTipoContaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_comboboxTipoContaActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_comboboxTipoContaActionPerformed

    private void btnPhotoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnPhotoActionPerformed
        if (inputNomeCompleto.getText() != ""){
            PPhotoPerfil pPhoto = new PPhotoPerfil(inputUser.getText(), inputNomeCompleto.getText());
            pPhoto.setVisible(true);
        } else {
            JOptionPane.showMessageDialog(null,"Digite o nome completo para adicionar uma foto!", "Error", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_btnPhotoActionPerformed
    
    public void cadastrarProfessorDB(Professor professor){
        String queryManual1 = String.format(
                "INSERT INTO pessoa (usuario, senha, nome, data_nascimento, idade, cpf, email, endereco, telefone, nivel_de_acesso, status_da_conta, pgt_rec_senha, resp_rec_senha) VALUES ('%s', '%s', '%s', '%s', %s, '%s', '%s', '%s', '%s', %s, %s, '%s', '%s');", 
                professor.getUsuario(), 
                professor.getSenha(), 
                professor.getNome(), 
                professor.getData_nascimento(), 
                professor.getIdade(), 
                professor.getCpf(),
                professor.getEmail(),
                professor.getEndereco(), 
                professor.getTelefone(), 
                professor.getNivel_de_acesso(), 
                professor.getStatus_da_conta(), 
                professor.getPgt_rec_senha(), 
                professor.getResp_rec_senha());
        String queryManual2 = String.format(
                "INSERT INTO professor (id_pessoa, materia_lecionada, salario) VALUES (LAST_INSERT_ID(), '%s', %s);", 
                professor.getMateriaLecionada(), 
                professor.getSalario());

        new ConexaoDB().cadastrarNewUserDB(queryManual1, queryManual2);

        JOptionPane.showMessageDialog(null, "Cadastro efetuado com sucesso!", "SUCESSO", JOptionPane.INFORMATION_MESSAGE);

    }
    
    public void cadastrarAluno(Aluno aluno){
        String queryManual1 = String.format(
                "INSERT INTO pessoa (usuario, senha, nome, data_nascimento, idade, cpf, email, endereco, telefone, nivel_de_acesso, status_da_conta, pgt_rec_senha, resp_rec_senha) VALUES ('%s', '%s', '%s', '%s', %s, '%s', '%s', '%s', '%s', %s, %s, '%s', '%s');", 
                aluno.getUsuario(), 
                aluno.getSenha(), 
                aluno.getNome(), 
                aluno.getData_nascimento(), 
                aluno.getIdade(), 
                aluno.getCpf(),
                aluno.getEmail(),
                aluno.getEndereco(), 
                aluno.getTelefone(), 
                aluno.getNivel_de_acesso(), 
                aluno.getStatus_da_conta(), 
                aluno.getPgt_rec_senha(), 
                aluno.getResp_rec_senha());
        String queryManual2 = String.format(
                "INSERT INTO aluno (id_pessoa, matricula, mensalidade) VALUES (LAST_INSERT_ID(), '%s', %s);", 
                aluno.getMatricula(), 
                aluno.getMensalidade());

        new ConexaoDB().cadastrarNewUserDB(queryManual1, queryManual2);

        JOptionPane.showMessageDialog(null, "Cadastro efetuado com sucesso!", "SUCESSO", JOptionPane.INFORMATION_MESSAGE);
    }
    public void cadastrarAdmin(Admin admin){
        String queryManual1 = String.format(
                "INSERT INTO pessoa (usuario, senha, nome, data_nascimento, idade, cpf, email, endereco, telefone, nivel_de_acesso, status_da_conta, pgt_rec_senha, resp_rec_senha) VALUES ('%s', '%s', '%s', '%s', %s, '%s', '%s', '%s', '%s', %s, %s, '%s', '%s');", 
                admin.getUsuario(), 
                admin.getSenha(), 
                admin.getNome(), 
                admin.getData_nascimento(), 
                admin.getIdade(), 
                admin.getCpf(),
                admin.getEmail(),
                admin.getEndereco(), 
                admin.getTelefone(), 
                admin.getNivel_de_acesso(), 
                admin.getStatus_da_conta(), 
                admin.getPgt_rec_senha(), 
                admin.getResp_rec_senha());

        new ConexaoDB().cadastrarNewUserDB(queryManual1);

        JOptionPane.showMessageDialog(null, "Cadastro efetuado com sucesso!", "SUCESSO", JOptionPane.INFORMATION_MESSAGE);
    }
    public boolean validarCampos(JTextField campoInput, String valor, String tabela){
        try {
            String queryManual = String.format("SELECT * FROM pessoa WHERE %s = '%s'", tabela, valor);
            ResultSet loginRetorno = conexao.retornarLogin(queryManual);
            String valor_encontrado = "";
            while (loginRetorno.next()){
                valor_encontrado = loginRetorno.getString(tabela);
            }
            if (valor_encontrado != ""){
                JOptionPane.showMessageDialog(null, String.format("O seguinte dado ja foi utilizado!: %s", valor_encontrado), "ERRO", JOptionPane.INFORMATION_MESSAGE);
                campoInput.setForeground(Color.red);
                return false;
            } else {
                campoInput.setForeground(Color.black);
                return true;
            }
            //JOptionPane.showMessageDialog(null,"Teste", "teste", JOptionPane.INFORMATION_MESSAGE);
        } catch (SQLException ex) {
            Logger.getLogger(PCadastro.class.getName()).log(Level.SEVERE, null, ex);
        }
        return false;
    }
    public boolean validarCpf(String cpf){
        return false;
    }
    public void validarIdade (String idade){
        try {
            String dataString = idade;
            SimpleDateFormat formato = new SimpleDateFormat("dd/MM/yyyy");
            Calendar calendario = Calendar.getInstance();
            calendario.setLenient(false);
            calendario.setTime(formato.parse(dataString));
            int dia = calendario.get(Calendar.DAY_OF_MONTH);
            int mes = calendario.get(Calendar.MONTH) + 1;
            int ano = calendario.get(Calendar.YEAR);
            
            if (dia >= 1 && dia <= calendario.getActualMaximum(Calendar.DAY_OF_MONTH) && mes >= 1 && mes <= 12) {
                long idadeSegundos = (System.currentTimeMillis() - calendario.getTimeInMillis()) / 1000;
                int idadeAnos = (int) (idadeSegundos / 31536000L);
                if (idadeAnos >= 1 && idadeAnos <= 120) {
                    confirm_idade = true;
                    dataDeNascimento.setForeground(Color.black);
                } else {
                    confirm_idade = false;
                    dataDeNascimento.setForeground(Color.red);
                    JOptionPane.showMessageDialog(null, "Data de nascimento invalida! O usuário deve conter entre 1 a 120 anos!", "Verificaçã ode data de nascimento", JOptionPane.ERROR_MESSAGE);
                }
            } else {
                confirm_idade = false;
                dataDeNascimento.setForeground(Color.red);
                JOptionPane.showMessageDialog(null, "Data de nascimento invalida! O usuário deve conter entre 1 a 120 anos!", "Verificaçã ode data de nascimento", JOptionPane.ERROR_MESSAGE);
            }
        } catch (ParseException ex) {
            System.out.println("Erro ao validar idade!");
        }
    }
    public int retornarIdadeInt(String data_nascimento){
        try {
            String dataString = data_nascimento;
            SimpleDateFormat formato = new SimpleDateFormat("dd/MM/yyyy");
            Date data = formato.parse(dataString);
            long idadeSegundos = (System.currentTimeMillis() - data.getTime()) / 1000;
            int idadeAnos = (int) (idadeSegundos / 31536000L);
            
            if (idadeAnos >= 1 && idadeAnos <= 120) {
                return idadeAnos;
            } else {
                return 0;
            }
        } catch (ParseException ex) {
            System.out.println("Erro ao retornar idade!");
        }
        return 0;
    }
    public String gerarMatriculaAluno(String cpf){
        String cpf_puro = (cpf.replace(".","")).replace("-", "");
        String invertida = new StringBuilder(cpf_puro).reverse().toString();
        return invertida;
    }
    
    /**
     * @param args the command line arguments
     */
    /*
    public static void main(String args[]) {
        
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new PCadastro().setVisible(true);
            }
        });
    }
    */
    

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnCadastrar;
    private javax.swing.JButton btnPhoto;
    private javax.swing.JButton btnVoltar;
    private javax.swing.JComboBox<String> comboboxRecSenha;
    private javax.swing.JComboBox<String> comboboxTipoConta;
    private javax.swing.JFormattedTextField dataDeNascimento;
    private javax.swing.JFormattedTextField inputCPF;
    private javax.swing.JTextField inputEmail;
    private javax.swing.JTextField inputEnd;
    private javax.swing.JTextField inputNomeCompleto;
    private javax.swing.JPasswordField inputPass;
    private javax.swing.JTextField inputRecSenha;
    private javax.swing.JFormattedTextField inputTel;
    private javax.swing.JTextField inputUser;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel20;
    private javax.swing.JLabel jLabel21;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    // End of variables declaration//GEN-END:variables
}
